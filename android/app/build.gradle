plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}


def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    throw new GradleException("versionCode not found. Define flutter.versionCode in the pubspec.yaml file.")
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    throw new GradleException("versionName not found. Define flutter.versionName in the pubspec.yaml file.")
}

// App bundle signing
// https://docs.flutter.dev/deployment/android
def keystoreProperties = new Properties()
   def keystorePropertiesFile = rootProject.file('key.properties')
   if (keystorePropertiesFile.exists()) {
       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
   }

android {
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion "27.0.12077973"
    namespace "fr.myecl.titan"

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "fr.myecl.titan"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
           signingConfig signingConfigs.release
        }
    }

	flavorDimensions "default"

	productFlavors {
		prod {
			dimension "default"
			resValue "string", "app_name", "MyECL"
            resValue "string", "flavor_url_scheme", "titan"
            manifestPlaceholders = ['appAuthRedirectScheme': 'fr.myecl.titan']
		}
		alpha {
			dimension "default"
			resValue "string", "app_name", "MyECL Alpha"
            resValue "string", "flavor_url_scheme", "titan.alpha"
			applicationIdSuffix ".alpha"
            manifestPlaceholders = ['appAuthRedirectScheme': 'fr.myecl.titan.alpha']
		}
		dev {
			dimension "default"
			resValue "string", "app_name", "MyECL Dev"
            resValue "string", "flavor_url_scheme", "titan.dev"
			applicationIdSuffix ".dev"
            manifestPlaceholders = ['appAuthRedirectScheme': 'fr.myecl.titan.dev']
		}
	}
}

flutter {
    source '../..'
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.4'
    implementation platform('com.google.firebase:firebase-bom:32.7.4')
}

android {
    defaultConfig {
        minSdkVersion 23
    }
}
