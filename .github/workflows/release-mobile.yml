name: Release mobile bundles

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*\+*'

jobs:
  extract-refs:
    name: Determine refs
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.get-ref.outputs.branch }}
      versionCode: ${{ steps.get-ref.outputs.branch }}
      versionName: ${{ steps.get-ref.outputs.branch }}
    steps:
      - name: Determine ref
        id: get-ref
        run: |
          branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
          tag=${GITHUB_REF#refs/*/}
          versionCode=${tag##*+}
          versionName=${tag%+*}
          versionName=${versionName#v}
          echo "branch=$branch" >> $GITHUB_OUTPUT
          echo "versionCode=$versionCode" >> $GITHUB_OUTPUT
          echo "versionName=$versionName" >> $GITHUB_OUTPUT
  
  build:
    name: Release titan-${{ needs.extract-refs.outputs.branch }} ${{ matrix.name }}
    runs-on: macos-latest
    needs: [extract-refs]
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: "appbundle"
            name: "AAB"
            path: build/app/outputs/bundle/release/app-signed.aab
          - target: "ipa"
            name: "IPA"
            path: build/ios/ipa/*.ipa
    
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3
      
      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: "3.13"
          cache: true
      
      - name: Get Packages
        run: flutter pub get
      
      - name: Cleanup 🧹
        run: flutter clean
      
      - name: Configure env
        run: |
          echo "THE_MOVIE_DB_API=$THE_MOVIE_DB_API" >> .env
          echo "DEBUG_HOST=$DEBUG_HOST" >> .env
          echo "RELEASE_HOST=$RELEASE_HOST" >> .env
        env:
          THE_MOVIE_DB_API: ${{ secrets.THE_MOVIE_DB_API }}
          DEBUG_HOST: ${{ secrets.DEBUG_HOST }}
          RELEASE_HOST: ${{ secrets.RELEASE_HOST }}
      
      - name: Add Firebase configuration for production
        if: ${{ steps.extract_branch.outputs.branch }} == "main"
        run: |
          echo "$GOOGLE_SERVICES_JSON" > android/app/google-services.json
          echo "$GOOGLE_SERVICE_INFO_PLIST" > ios/Runner/GoogleService-Info.plist
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
          GOOGLE_SERVICE_INFO_PLIST: ${{ secrets.GOOGLE_SERVICE_INFO_PLIST }}
      
      - name: Add Firebase configuration for Alpha
        if: ${{ steps.extract_branch.outputs.branch }} == "alpha"
        run: |
          echo "$GOOGLE_SERVICES_ALPHA_JSON" > android/app/google-services.json
          echo "$GOOGLE_SERVICE_INFO_ALPHA_PLIST" > ios/Runner/GoogleService-Info.plist
        env:
          GOOGLE_SERVICES_ALPHA_JSON: ${{ secrets.GOOGLE_SERVICES_ALPHA_JSON }}
          GOOGLE_SERVICE_INFO_ALPHA_PLIST: ${{ secrets.GOOGLE_SERVICE_INFO_ALPHA_PLIST }}
      
      - name: Create the Keystore
        if: ${{ matrix.name }} == "AAB"
        run: |
          echo ${{ secrets.KEYSTORE_BASE64 }} | base64 -d > $RUNNER_TEMP/myecl.keystore
          echo storePassword=${{ secrets.STORE_PASSWORD }} >> android/key.properties
          echo keyPassword=${{ secrets.KEY_PASSWORD }} >> android/key.properties
          echo keyAlias=${{ secrets.KEY_ALIAS }} >> android/key.properties
          echo storeFile=$RUNNER_TEMP/myecl.keystore >> android/key.properties
      
      - name: Set alpha properties
        if: ${{ steps.extract_branch.outputs.branch }} == "alpha"
        run: |
          rm assets/images/icon.png
          mv assets/images/icon_alpha.png assets/images/icon.png
          rm assets/images/logo.png
          mv assets/images/logo_alpha.png assets/images/logo.png
      
      - name: Build 🔧
        run: flutter build ${{ matrix.target }} --release --build-name ${{ steps.get-ref.outputs.versionName }} --build-number ${{ steps.get-ref.outputs.versionCode }}
      
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: titan-release
          path: ${{ matrix.path }}
          if-no-files-found: ignore